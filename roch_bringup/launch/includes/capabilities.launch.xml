<!--
  Launchers for capability server with default providers. 
  This file only use default launch file with capabilities package, and add some default files of Roch.
 -->
<launch>
  <arg name="base"/>
  <arg name="3d_sensor"/>
  <arg name="2d_laser"/>
  <!-- Start capability server including parameters for base-specific default providers -->
  <arg name="test_case" default="minimal" />
  <arg name="debug" default="false" />

  <node pkg="capabilities" name="capability_server" type="capability_server" required="true">
    <env name="ROS_PACKAGE_PATH"
         value="$(find capabilities)/test/unit/discovery_workspaces/$(arg test_case):$(env ROS_PACKAGE_PATH)" />
    <param name="debug" value="true" if="$(arg debug)" />
    <param name="defaults/minimal_pkg/Minimal" value="minimal_pkg/minimal" />
    <param name="defaults/minimal_pkg/SpecificMinimal" value="minimal_pkg/specific_minimal" />
    <!-- base-agnostic default providers -->
    <rosparam file="$(find roch_bringup)/param/capabilities/defult_capabilities_providers.yaml" command="load"/>
    <!-- base-specific default providers -->
    <rosparam file="$(find roch_bringup)/param/capabilities/$(arg base)/capability_providers.yaml" command="load"/>
    <!-- 3D sensor-specific default providers -->
    <rosparam file="$(find roch_bringup)/param/capabilities/3dsensor/$(arg 3d_sensor)/capability_providers.yaml" command="load"/>
    <!-- 2D laser-specific default providers -->
    <rosparam file="$(find roch_bringup)/param/capabilities/laser/$(arg 2d_sensor)/capability_providers.yaml" command="load"/>
    <rosparam param="package_whitelist">
      - minimal_pkg
      - std_capabilities
      - roch_capabilities
    </rosparam>
    <rosparam param="blacklist">
      - 'std_capabilities/Navigation2D'
      - 'std_capabilities/MultiEchoLaserSensor'
    </rosparam>
  </node>
</launch>

<!--
  Roch's implementation of roch's mobile base.
-->
<launch>
    <arg name="simulation" default="$(optenv ROCH_SIMULATION false)"/>

    <param name="/use_sim_time" value="$(arg simulation)"/>

    <arg name="serialport" default="$(env ROCH_SERIAL_PORT)"/> 

    <!-- roch harware driver -->
    <node pkg="nodelet" type="nodelet" name="mobile_base_nodelet_manager" args="manager"/>

    <!-- roch harware driver -->
    <node pkg="roch_base" type="roch_node" name="roch_node" >
    <!-- it cannt follow speed in navigation that can hit obstracte when control_frequency equial 50 -->
        <rosparam subst_value="true">
            port: $(arg serialport)

            control_frequency: 50.0
            diagnostic_frequency: 1.0

            max_acceleration: 3.0
            max_speed: 0.45
            wheel_diameter: 0.095
            polling_timeout: 10.0
            cliff_hegiht: 0.1
            ult_length: 0.3
            psd_length: 0.3 
        </rosparam>
        <!-- cliff_hegiht, ult_length, psd_length is for avoid distance(meter)
        <remap from="navigation_velocity_smoother/raw_cmd_vel" to="cmd_vel"/>-->
	<!-- <remap from="roch_velocity_controller/odom" to="odom"/>for robot_pose_ekf -->
        <remap from="/core_sensors" to="mobile_base/sensors/core"/>
    </node>

    <!-- Differential controller parameters and basic localization -->
    <include file="$(find roch_control)/launch/control.launch" />

    <node pkg="roch_capabilities" type="placeholder.py" name="roch_bringup"/>
</launch>
<launch>
    <node name="bringup" pkg="roch_capabilities" type="hello.py" output="screen" />
</launch>

<!-- 
  Launcher for the Roch's robot state publisher provider. 
-->
<launch>
  <!-- Roch Configure -->
  <arg name="base"		    default="$(env ROCH_BASE)"			doc="mobile base type [roch]"/>
  <arg name="stacks"		default="$(env ROCH_STACKS)"			doc="stack type displayed in visualisation/simulation [standard]"/>
  <arg name="3d_sensor"		default="$(env ROCH_3D_SENSOR)"			doc="3d sensor types [kinect, asus_xtion_pro, r200]"/>
  <arg name="3d_sensor_enable"	default="$(env ROCH_3D_SENSOR_ENABLE)"		doc="3d sensor enable"/>
  <arg name="2d_laser"		default="$(env ROCH_LASER)"			doc="2d laser types [ls01c, rplidar]"/>
  <arg name="2d_laser_enable"	default="$(env ROCH_LASER_ENABLE)"		doc="2d laser enable"/>
  <arg name="serialport"	default="$(env ROCH_SERIAL_PORT)"		doc="used by create to configure the port it is connected on [/dev/ttyUSB0, /dev/ttyS0]"/>
  <arg name="simulation"        default="$(env ROCH_SIMULATION)"  		doc="set flags to indicate this turtle is run in simulation mode."/>
  <arg name="robot_name"        default="$(env ROCH_NAME)"       		doc="used as a unique identifier and occasionally to preconfigure root namespaces, gateway/zeroconf ids etc."/>
  <arg name="robot_type"        default="$(env ROCH_TYPE)"       		doc="just in case you are considering a 'variant' and want to make use of this."/>
  
  <!-- load the roch model  -->
  <include file="$(find roch_bringup)/launch/includes/description.launch.xml">
    <arg name="base" value="$(arg base)" />
    <arg name="stacks" value="$(arg stacks)" />
    <arg name="3d_sensor" value="$(arg 3d_sensor)" />
    <arg name="3d_sensor_enable" value="$(arg 3d_sensor_enable)"/>
    <arg name="2d_laser"  value="(arg 2d_laser)"/>
    <arg name="2d_laser_enable"  value="(arg 2d_laser_enable)"/>
  </include>
 
  <!-- start the robot state publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="5.0" />
  </node>
</launch>

